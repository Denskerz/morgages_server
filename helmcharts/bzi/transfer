@app.post("/start")
async def start(start_date: datetime, end_date: datetime, session: AsyncSession = Depends(get_db_session)):
    data: tuple[dict[str, DataFrame]] = process_excel_data(disk.paths_processing(start_date, end_date).reset_index(drop=True))
    disk.reset()

    for table in data:
        for table_name, df in table.items():
            model = table_model_map.get(table_name)
            if model is None:
                raise HTTPException(status_code=400, detail=f"Unknown table: {table_name}")

            db_records = []
            for _, row in df.iterrows():
                db_record = model()
                for col, value in row.items():
                    setattr(db_record, col, value)
                db_records.append(db_record)

            await session.add_all(db_records)

    try:
        await session.commit()
    except Exception as e:
        await session.rollback()
        raise HTTPException(status_code=500, detail=str(e))

    return {"status": "Data uploaded successfully"}