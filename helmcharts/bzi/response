@app.post("/start")
async def start(start_date: datetime, end_date: datetime, session: AsyncSession = Depends(get_db_session)):
    data: tuple[dict[str, pd.DataFrame]] = process_excel_data(disk.paths_processing(start_date, end_date).reset_index(drop=True))
    disk.reset()

    try:
        for table in data:
            for table_name, df in table.items():
                model = table_model_map.get(table_name)
                if model is None:
                    raise HTTPException(status_code=400, detail=f"Unknown table: {table_name}")

                async with session.begin():
                    await session.execute(
                        model.__table__.insert(),
                        [row.to_dict() for _, row in df.iterrows()]
                    )
    except Exception as e:
        await session.rollback()
        raise HTTPException(status_code=500, detail=str(e))
    return {"status": "Data uploaded successfully"}